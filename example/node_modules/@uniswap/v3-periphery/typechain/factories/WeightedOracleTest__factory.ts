/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { WeightedOracleTest } from "../WeightedOracleTest";

export class WeightedOracleTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<WeightedOracleTest> {
    return super.deploy(overrides || {}) as Promise<WeightedOracleTest>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WeightedOracleTest {
    return super.attach(address) as WeightedOracleTest;
  }
  connect(signer: Signer): WeightedOracleTest__factory {
    return super.connect(signer) as WeightedOracleTest__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WeightedOracleTest {
    return new Contract(address, _abi, signerOrProvider) as WeightedOracleTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "period",
        type: "uint32",
      },
    ],
    name: "consult",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "arithmeticMeanTick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "harmonicMeanLiquidity",
            type: "uint128",
          },
        ],
        internalType: "struct WeightedOracleLibrary.PeriodObservation",
        name: "observation",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "arithmeticMeanTick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "harmonicMeanLiquidity",
            type: "uint128",
          },
        ],
        internalType: "struct WeightedOracleLibrary.PeriodObservation[]",
        name: "observations",
        type: "tuple[]",
      },
    ],
    name: "getArithmeticMeanTickWeightedByLiquidity",
    outputs: [
      {
        internalType: "int24",
        name: "arithmeticMeanWeightedTick",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633f89d22b1461003b5780638241348914610064575b600080fd5b61004e610049366004610667565b610084565b60405161005b9190610766565b60405180910390f35b61007761007236600461060f565b610095565b60405161005b9190610774565b600061008f826100ae565b92915050565b61009d6105f8565b6100a7838361019a565b9392505050565b6000806000805b8451811015610143578481815181106100ca57fe5b60200260200101516000015160020b8582815181106100e557fe5b6020026020010151602001516fffffffffffffffffffffffffffffffff16028301925084818151811061011457fe5b6020026020010151602001516fffffffffffffffffffffffffffffffff168201915080806001019150506100b5565b5080828161014d57fe5b059250600082128015610168575080828161016457fe5b0715155b15610193577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201915b5050919050565b6101a26105f8565b63ffffffff821661021457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f4250000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60408051600280825260608201835263ffffffff851673ffffffffffffffffffffffffffffffffffffffff02926000929190602083019080368337019050509050838160008151811061026357fe5b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061028c57fe5b63ffffffff9092166020928302919091018201526040517f883bdbfd00000000000000000000000000000000000000000000000000000000815260048101828152835160248301528351600093849373ffffffffffffffffffffffffffffffffffffffff8b169363883bdbfd9388939192839260449091019185820191028083838b5b8381101561032757818101518382015260200161030f565b505050509050019250505060006040518083038186803b15801561034a57600080fd5b505afa15801561035e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160409081528110156103a557600080fd5b81019080805160405193929190846401000000008211156103c557600080fd5b9083019060208201858111156103da57600080fd5b82518660208202830111640100000000821117156103f757600080fd5b82525081516020918201928201910280838360005b8381101561042457818101518382015260200161040c565b505050509050016040526020018051604051939291908464010000000082111561044d57600080fd5b90830190602082018581111561046257600080fd5b825186602082028301116401000000008211171561047f57600080fd5b82525081516020918201928201910280838360005b838110156104ac578181015183820152602001610494565b50505050905001604052505050915091506000826000815181106104cc57fe5b6020026020010151836001815181106104e157fe5b60200260200101510390506000826000815181106104fb57fe5b60200260200101518360018151811061051057fe5b60200260200101510390508763ffffffff168260060b8161052d57fe5b05600290810b900b87526000600683900b12801561055f57508763ffffffff168260060b8161055857fe5b0760060b15155b156105925786517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01600290810b900b87525b77ffffffffffffffffffffffffffffffffffffffff00000000602082901b1677ffffffffffffffffffffffffffffffffffffffffffffffff8716816105d357fe5b046fffffffffffffffffffffffffffffffff1660208801525094979650505050505050565b604080518082019091526000808252602082015290565b60008060408385031215610621578182fd5b823573ffffffffffffffffffffffffffffffffffffffff81168114610644578283fd5b9150602083013563ffffffff8116811461065c578182fd5b809150509250929050565b60006020808385031215610679578182fd5b823567ffffffffffffffff80821115610690578384fd5b818501915085601f8301126106a3578384fd5b8135818111156106af57fe5b6106bc84858302016107a0565b818152848101908486016040808502870188018b10156106da578889fd5b8896505b848710156107575780828c0312156106f4578889fd5b8051818101818110888211171561070757fe5b82528235600281900b811461071a578a8bfd5b8152828901356fffffffffffffffffffffffffffffffff8116811461073d578a8bfd5b818a015284526001969096019592870192908101906106de565b50909998505050505050505050565b60029190910b815260200190565b815160020b81526020918201516fffffffffffffffffffffffffffffffff169181019190915260400190565b60405181810167ffffffffffffffff811182821017156107bc57fe5b60405291905056fea164736f6c6343000706000a";
