/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { OracleTest } from "../OracleTest";

export class OracleTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<OracleTest> {
    return super.deploy(overrides || {}) as Promise<OracleTest>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OracleTest {
    return super.attach(address) as OracleTest;
  }
  connect(signer: Signer): OracleTest__factory {
    return super.connect(signer) as OracleTest__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleTest {
    return new Contract(address, _abi, signerOrProvider) as OracleTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsAgo",
        type: "uint32",
      },
    ],
    name: "consult",
    outputs: [
      {
        internalType: "int24",
        name: "arithmeticMeanTick",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "harmonicMeanLiquidity",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getBlockStartingTickAndLiquidity",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "period",
        type: "uint32",
      },
    ],
    name: "getGasCostOfConsult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
    ],
    name: "getGasCostOfGetQuoteAtTick",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getOldestObservationSecondsAgo",
    outputs: [
      {
        internalType: "uint32",
        name: "secondsAgo",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "currentTimestamp",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
    ],
    name: "getQuoteAtTick",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "weight",
            type: "uint128",
          },
        ],
        internalType: "struct OracleLibrary.WeightedTickData[]",
        name: "observations",
        type: "tuple[]",
      },
    ],
    name: "getWeightedArithmeticMeanTick",
    outputs: [
      {
        internalType: "int24",
        name: "arithmeticMeanWeightedTick",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611595806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063824134891161005b57806382413489146100df578063ab34b0fc146100f2578063bbe8f41914610112578063e6c4fbe0146101255761007d565b8063333b19a81461008257806343c57a27146100ac5780636a816ff9146100cc575b600080fd5b610095610090366004611385565b610146565b6040516100a392919061151f565b60405180910390f35b6100bf6100ba3660046114be565b61015c565b6040516100a39190611544565b6100bf6100da3660046114be565b610173565b6100956100ed36600461139f565b610192565b6101056101003660046113dd565b6101aa565b6040516100a39190611511565b6100bf61012036600461139f565b6101bd565b610138610133366004611385565b6101d9565b6040516100a392919061154d565b600080610152836101ee565b915091505b915091565b600061016a858585856105dd565b95945050505050565b6000805a9050610185868686866105dd565b505a900395945050505050565b60008061019f8484610786565b915091509250929050565b60006101b582610bb7565b90505b919050565b6000805a90506101cd8484610786565b50505a90039392505050565b6000806101e583610ca3565b93429350915050565b60008060008060008573ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561023c57600080fd5b505afa158015610250573d6000803e3d6000fd5b505050506040513d60e081101561026657600080fd5b50602081015160408201516060909201519094509092509050600161ffff8216116102f257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f4e454f0000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008060008873ffffffffffffffffffffffffffffffffffffffff1663252c09d7866040518263ffffffff1660e01b8152600401808261ffff16815260200191505060806040518083038186803b15801561034c57600080fd5b505afa158015610360573d6000803e3d6000fd5b505050506040513d608081101561037657600080fd5b508051602082015160409092015190945090925090504263ffffffff9081169084161461042157858973ffffffffffffffffffffffffffffffffffffffff16631a6865026040518163ffffffff1660e01b815260040160206040518083038186803b1580156103e457600080fd5b505afa1580156103f8573d6000803e3d6000fd5b505050506040513d602081101561040e57600080fd5b5051909850965061015795505050505050565b60008461ffff1660018661ffff168861ffff1601038161043d57fe5b0690506000806000808d73ffffffffffffffffffffffffffffffffffffffff1663252c09d7866040518263ffffffff1660e01b81526004018082815260200191505060806040518083038186803b15801561049757600080fd5b505afa1580156104ab573d6000803e3d6000fd5b505050506040513d60808110156104c157600080fd5b50805160208201516040830151606090930151919650945090925090508061054a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f4f4e490000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b83880363ffffffff811684890360060b8161056157fe5b059b50600077ffffffffffffffffffffffffffffffffffffffff0000000084890360201b1663ffffffff831673ffffffffffffffffffffffffffffffffffffffff0277ffffffffffffffffffffffffffffffffffffffffffffffff16816105c457fe5b9d9f50909c049c50505050505050505050505050915091565b6000806105e986610ece565b90506fffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff8216116106b75773ffffffffffffffffffffffffffffffffffffffff80821680029084811690861610610679576106747801000000000000000000000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683611261565b6106af565b6106af81876fffffffffffffffffffffffffffffffff167801000000000000000000000000000000000000000000000000611261565b92505061077d565b60006106e373ffffffffffffffffffffffffffffffffffffffff83168068010000000000000000611261565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161061074b57610746700100000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683611261565b610779565b61077981876fffffffffffffffffffffffffffffffff16700100000000000000000000000000000000611261565b9250505b50949350505050565b60008063ffffffff83166107fb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f4250000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b604080516002808252606082018352600092602083019080368337019050509050838160008151811061082a57fe5b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061085357fe5b63ffffffff9092166020928302919091018201526040517f883bdbfd00000000000000000000000000000000000000000000000000000000815260048101828152835160248301528351600093849373ffffffffffffffffffffffffffffffffffffffff8b169363883bdbfd9388939192839260449091019185820191028083838b5b838110156108ee5781810151838201526020016108d6565b505050509050019250505060006040518083038186803b15801561091157600080fd5b505afa158015610925573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604090815281101561096c57600080fd5b810190808051604051939291908464010000000082111561098c57600080fd5b9083019060208201858111156109a157600080fd5b82518660208202830111640100000000821117156109be57600080fd5b82525081516020918201928201910280838360005b838110156109eb5781810151838201526020016109d3565b5050505090500160405260200180516040519392919084640100000000821115610a1457600080fd5b908301906020820185811115610a2957600080fd5b8251866020820283011164010000000082111715610a4657600080fd5b82525081516020918201928201910280838360005b83811015610a73578181015183820152602001610a5b565b5050505090500160405250505091509150600082600081518110610a9357fe5b602002602001015183600181518110610aa857fe5b6020026020010151039050600082600081518110610ac257fe5b602002602001015183600181518110610ad757fe5b60200260200101510390508763ffffffff168260060b81610af457fe5b05965060008260060b128015610b1e57508763ffffffff168260060b81610b1757fe5b0760060b15155b15610b49577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909601955b63ffffffff881673ffffffffffffffffffffffffffffffffffffffff0277ffffffffffffffffffffffffffffffffffffffff00000000602083901b1677ffffffffffffffffffffffffffffffffffffffffffffffff821681610ba757fe5b0496505050505050509250929050565b6000806000805b8451811015610c4c57848181518110610bd357fe5b6020026020010151602001516fffffffffffffffffffffffffffffffff16858281518110610bfd57fe5b60200260200101516000015160020b0283019250848181518110610c1d57fe5b6020026020010151602001516fffffffffffffffffffffffffffffffff16820191508080600101915050610bbe565b50808281610c5657fe5b059250600082128015610c715750808281610c6d57fe5b0715155b15610c9c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201915b5050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610cee57600080fd5b505afa158015610d02573d6000803e3d6000fd5b505050506040513d60e0811015610d1857600080fd5b506040810151606090910151909250905061ffff8116610d9957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f4e49000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1663252c09d78461ffff168660010161ffff1681610dcc57fe5b066040518263ffffffff1660e01b8152600401808261ffff16815260200191505060806040518083038186803b158015610e0557600080fd5b505afa158015610e19573d6000803e3d6000fd5b505050506040513d6080811015610e2f57600080fd5b508051606090910151909250905080610ec3578573ffffffffffffffffffffffffffffffffffffffff1663252c09d760006040518263ffffffff1660e01b81526004018082815260200191505060806040518083038186803b158015610e9457600080fd5b505afa158015610ea8573d6000803e3d6000fd5b505050506040513d6080811015610ebe57600080fd5b505191505b504203949350505050565b60008060008360020b12610ee5578260020b610eed565b8260020b6000035b9050620d89e8811115610f6157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f5400000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600060018216610f8257700100000000000000000000000000000000610f94565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610fc8576ffff97272373d413259a46990580e213a0260801c5b6004821615610fe7576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615611006576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615611025576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615611044576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615611063576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615611082576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156110a2576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156110c2576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156110e2576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615611102576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615611122576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615611142576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615611162576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611182576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156111a3576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156111c3576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156111e2576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156111ff576b048a170391f7dc42444e8fa20260801c5b60008460020b131561123857807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8161123457fe5b0490505b64010000000081061561124c57600161124f565b60005b60ff16602082901c0192505050919050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709868602925082811090839003039050806112b557600084116112aa57600080fd5b508290049050611328565b8084116112c157600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146101b857600080fd5b8035600281900b81146101b857600080fd5b80356fffffffffffffffffffffffffffffffff811681146101b857600080fd5b600060208284031215611396578081fd5b6113288261132f565b600080604083850312156113b1578081fd5b6113ba8361132f565b9150602083013563ffffffff811681146113d2578182fd5b809150509250929050565b600060208083850312156113ef578182fd5b823567ffffffffffffffff80821115611406578384fd5b818501915085601f830112611419578384fd5b81358181111561142557fe5b6114328485830201611564565b818152848101908486016040808502870188018b1015611450578889fd5b8896505b848710156114af5780828c03121561146a578889fd5b8051818101818110888211171561147d57fe5b825261148883611353565b8152611495898401611365565b818a01528452600196909601959287019290810190611454565b50909998505050505050505050565b600080600080608085870312156114d3578182fd5b6114dc85611353565b93506114ea60208601611365565b92506114f86040860161132f565b91506115066060860161132f565b905092959194509250565b60029190910b815260200190565b60029290920b82526fffffffffffffffffffffffffffffffff16602082015260400190565b90815260200190565b63ffffffff92831681529116602082015260400190565b60405181810167ffffffffffffffff8111828210171561158057fe5b60405291905056fea164736f6c6343000706000a";
